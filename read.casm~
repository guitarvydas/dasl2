def
  ~.kind = async
  ~.name = "read"
  ~.input[0]=()
  ~.output[0]=((index) (atom space modified))
  ~.inputs = [~.input[0]]
  ~.outputs = [~.output[0]]
  ~.ancestor = "read eval format"
  ~.locals = []
  ~.input-queue = []
  ~.output-queue = []
  ~.before = %fn{%asc{$inject ~.(buffer) >> [format](buffer)}}
  ~.handler = %handler{}
  ~.after = %fn{%asc{%return ~.locals.(atoms) ~.locals.(formatted buffer)}}
  ~.children = [
    "reader" : [reader] >> (atoms) (index)
    "eval" : [eval](e) >> (result)
    "format" : [format](index)(buffer) >> (formatted buffer)
  ]
  ~.connections = [
    [reader](index) >> [eval](e)
    [eval](result) >> [format](index)
  ]
