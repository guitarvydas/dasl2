ASCScript = Component+ Signature+

Component = DefToken ComponentNameDef NameSection EtagsSection
  InputsSection OutputsSection NetsSection LocalsSection
  InitiallyCode HandlerCode FinallyCode
  ChildrenSection ConnectionsSection

Signature = SignatureToken ComponentNameRef NameSection EtagsSection
  InputsSection OutputsSection


DefSection = DefToken ComponentNameDef
NameSection = KeywordToken<"name"> ComponentNameRef
EtagsSection = KeywordToken<"etags"> TagNameDef*
InputsSection = KeywordToken<"inputs"> TagNameRef*
OutputsSection = KeywordToken<"outputs"> TagNameRef*
NetsSection = KeywordToken<"nets"> NetNameDef*
LocalsSection = KeywordToken<"locals"> LocalNameDef*
InitiallySection = KeywordToken<"initially"> Code
HandlerSection = KeywordToken<"handler"> HanderCode
FinallySection = KeywordToken<"finally"> Code
ChildrenSection = KeywordToken<"children"> Child*
ConnectionsSection = Connection*

  Connection = Sender NetNameRef Receiver+
  Child = ComponentNameRef FunctionOrComponent
  FunctionOrComponent = FunctionRef | ComponentNameRef
  FunctionRef = LexToken<"lambda"> FunctionNameRef


    HandlerCode = MessageHandler | Code
    Code = SynonymStatement | ConcludeStatement | ReturnStatement
           | ConditionalStatement | SendStatement | InjectStatement
	   | ExternalCodeStatement

      SynonymStatement = Lvalue Syn Rvalue
      ConcludeStatement = KeywordToken<"conclude">
      ReturnStatement = KeywordToken<"return"> Rvalue*
      SendStatement = KeywordToken<"send"> TagName Rvalue
      InjectStatement = KeywordToken<"inject"> TagName Rvalue
      ExternalCodeStatement = ExternalCode
      ConditionalStatement = Lbracket PredicateNameRef CondClause+ Rbracket
      MessageHandler = Lbracket HandlerClause+ Rbracket

	CondClause = Choice Rvalue Code
	HandlerClause = Choice TagNameRef Code

	  Lvalue = LocalAccessor
	  Rvalue = BuiltinConstant | LocalAccessor

          LocalAccessor 
            = LocalNameRef Lookup LocalAccessor
            | LocalNameRef Slot LocalAccessor
            | LocalNameRef

	    Sender = ComponentNameRef TagNameRef
	    Receiver = ComponentNameRef TagNameXRef
            PredicateTest = Identifier Args

	    Args = Lpar Rvalue+ Rpar

	    DefToken = KeywordToken<"def">
	    ComponentNameDef = ComponentName
	    ComponentNameRef = ComponentName


	      LocalNameDef = IdentToken
	      LocalNameRef = IdentToken
	      NetNameDef = IdentToken
	      NetNameRef = IdentToken
	      FunctionNameRef = IdentToken
	      TagNameDef = TagName
	      TagNameRef = TagName
	      TagNameXRef = TagName

		Syn = KeywordToken<"synonym">
		ComponentName = LexToken<"lbracket"> SubIdent+ LexToken<"rbracket">
		TagName = LexToken<"lport"> SubIdent+ LexToken<"rport">
		Identifier 
                  = LexToken<"lpar"> SubIdent+ LexToken<"rpar">
                  | SubIdent
		Lbracket = LexToken<"lbracket">
		Rbracket = LexToken<"rbracket">
		Lpar = LexToken<"lpar">
		Rpar = LexToken<"rpar">
		Langle = LexToken<"langle">
		Rangle = LexToken<"rangle">
		Choice = LexToken<"choice">
		Slot = LexToken<"dot">
		Lookup = LexToken<"lookup">
		Yes = KeywordToken<"yes">
		No = KeywordToken<"no">
		Trigger = KeywordToken<"trigger">
		Choice = LexToken<"choice">
		Synonym = LexToken<"synonym">

                BuiltinConstant = Yes | No | Trigger
		


undefined
  lextoken choice "|"
  lextoken synonym "="
  lextoken langle "⟨"
  lextoken rangle "⟩"
