basictoken {
// basic token
  Main = Token+

  Token = NLToken | WSToken | LexToken | TextToken | IdentToken | CompoundToken | EndCompoundToken
  GenericToken = "{" dq "token" dq ":" string "," dq "content" dq ":" string "}" ","?

  NLToken = "{" dq "token" dq ":" dq "nl" dq "," dq "content" dq ":" string "}" ","?
  WSToken = "{" dq "token" dq ":" dq "ws" dq "," dq "content" dq ":" string "}" ","?
  LexToken = "{" dq "token" dq ":" dq "lex" dq "," dq "content" dq ":" string "}" ","?
  TextToken = "{" dq "token" dq ":" dq "text" dq "," dq "content" dq ":" string "}" ","?
  IdentToken = "{" dq "token" dq ":" dq "ident" dq "," dq "content" dq ":" string "}" ","?
  CompoundToken = "{" dq "token" dq ":" dq "compound" dq "," dq "content" dq ":" string "}" ","?
  EndCompoundToken = "{" dq "token" dq ":" dq "endcompound" dq "," dq "content" dq ":" string "}" ","?

  string = dq stringChar* dq
  dq = "\""
  stringChar = ~dq any


}

linenumbers <: basictoken {
}

brackets <: basictoken {
  LbracketToken = "{" dq "token" dq ":" dq "lex" dq "," dq "content" dq ":" dq "[" dq "}" ","?
  RbracketToken = "{" dq "token" dq ":" dq "lex" dq "," dq "content" dq ":" dq "]" dq "}" ","?
  LportToken = "{" dq "token" dq ":" dq "lex" dq "," dq "content" dq ":" dq "«" dq "}" ","?
  RportToken = "{" dq "token" dq ":" dq "lex" dq "," dq "content" dq ":" dq "»" dq "}" ","?
}

compoundidents <: brackets {
  Component = LbracketToken CompoundName+ RbracketToken
  Port = LportToken CompoundName+ RportToken
  CompoundName = IdentToken | WSToken
}
