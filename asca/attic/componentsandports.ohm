tokenfolding {

// see tokenfolding.drawio

Main = Token+
Token = ComponentSequence | PortSequence | OtherToken

ComponentSequence = LbracketToken ComponentName RbracketToken
PortSequence = LportToken PortName RportToken

ComponentName = IDstring
PortName = IDstring

IDstring = (IdentToken | WSToken)+

LportToken = "{" LexClass "," LportKind "," TokenContent "}" optionalComma
RportToken = "{" LexClass "," RportKind "," TokenContent "}" optionalComma
LbracketToken = "{" LexClass "," LbracketKind "," TokenContent "}" optionalComma
RbracketToken = "{" LexClass "," RbracketKind "," TokenContent "}" optionalComma
IdentToken = "{" IdentClass "," TokenContent "}" optionalComma
WSToken = "{" WSClass "," TokenContent "}" optionalComma

OtherToken = "{" TokenID "," TokenContent "}" optionalComma

////

LexClass = dq "class" dq ":" dq "lex" dq
IdentClass = dq "class" dq ":" dq "ident" dq
WSClass = dq "class" dq ":" dq "ws" dq

LportKind = dq "token" dq ":" dq "«" dq
RportKind = dq "token" dq ":" dq "»" dq
LbracketKind = dq "token" dq ":" dq "[" dq
RbracketKind = dq "token" dq ":" dq "]" dq
IdentKind = dq "token" dq ":" dq "ident" dq
WSKind = dq "token" dq ":" dq "ws" dq

TokenID = dq "token" dq ":" string
TokenContent = dq "content" dq ":" string

////

dq = "\""
string = dq (~dq any)* dq
optionalComma = ","?

ident = identchar+
identchar = ~dq any
}
